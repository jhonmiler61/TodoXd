{"version":3,"sources":["TodoContext/index.jsx","TodoContext/useLocalStorage.jsx","Componentes/TodoCounter/index.jsx","Componentes/TodoItem/index.jsx","Componentes/CreateTodoButton/index.jsx","Componentes/TodoSearch/index.jsx","Componentes/TodoList/index.jsx","Modal/index.jsx","Componentes/TodoForm/index.jsx","App/AppUI.jsx","App/index.jsx","index.js"],"names":["TodoContext","React","createContext","TodoProvider","props","itemName","initialValue","parsedItem","useState","loading","setLoading","error","setError","item","setItem","localStorageItem","localStorage","getItem","useEffect","setTimeout","JSON","parse","stringify","saveItem","newItem","stringifyItem","useLocalStorage","todos","saveTodos","searchValue","setSearchValue","openModal","setOpenModal","completedTodos","filter","todo","completed","length","totalTodos","searchedTodos","todoText","text","toLowerCase","searchText","includes","Provider","value","completeTodo","todoIndex","findIndex","newTodos","addTodo","push","deleteTodo","splice","children","TodoCounter","useContext","Fragment","style","className","TodoItem","onClick","onComplete","onDelete","CreateTodoButton","prevState","TodoSearch","onChange","event","console","log","target","placeholder","TodoList","Modal","ReactDOM","createPortal","document","getElementById","TodoForm","newTodoValue","setNewTodoValue","onSubmit","preventDefault","htmlFor","texto","type","AppUI","map","App","render","StrictMode"],"mappings":"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","file":"static/js/main.151faced.chunk.js","sourcesContent":["import  React from 'react'\r\nimport {useLocalStorage} from  './useLocalStorage';\r\nconst TodoContext =  React.createContext();\r\n\r\nfunction TodoProvider(props){\r\n    const { item: todos,\r\n        saveItem: saveTodos,\r\n        loading, error\r\n        }= useLocalStorage('TODOS_V1',[]);\r\n      const [searchValue,setSearchValue] = React.useState('');\r\n      const [openModal, setOpenModal] = React.useState(false)\r\n      const completedTodos = todos.filter(todo=> !!todo.completed ).length;\r\n      const totalTodos = todos.length;\r\n    \r\n      let searchedTodos=[];\r\n    \r\n      if(!searchValue.length>=1){\r\n        searchedTodos = todos;\r\n      }\r\n      else {\r\n        searchedTodos = todos.filter(todo=>{\r\n          const todoText = todo.text.toLowerCase()\r\n          const searchText = searchValue.toLowerCase();\r\n          return todoText.includes(searchText)\r\n    \r\n        })\r\n      }\r\n    \r\n      const completeTodo = (text)=>{\r\n        const todoIndex = todos.findIndex(todo => todo.text === text );\r\n        const newTodos =[...todos];\r\n        newTodos[todoIndex].completed=true;\r\n        saveTodos(newTodos);\r\n    \r\n      }\r\n\r\n          \r\n      const addTodo = (text)=>{\r\n\r\n        const newTodos =[...todos];\r\n        newTodos.push({\r\n          completed:false,\r\n          text,\r\n\r\n\r\n        })\r\n        saveTodos(newTodos);\r\n    \r\n      }\r\n    \r\n      const deleteTodo = (text)=>{\r\n        const todoIndex = todos.findIndex(todo => todo.text === text );\r\n        const newTodos =[...todos];\r\n        newTodos.splice(todoIndex,1); \r\n        saveTodos(newTodos);\r\n    \r\n      }\r\n    return(\r\n        <TodoContext.Provider value={{\r\n            loading, \r\n            error,\r\n            totalTodos,\r\n            completedTodos,\r\n            searchValue,\r\n            setSearchValue,\r\n            searchedTodos,\r\n            completeTodo,\r\n            addTodo,\r\n            deleteTodo,\r\n            openModal,\r\n            setOpenModal\r\n        }} >\r\n            {props.children}\r\n        </TodoContext.Provider>\r\n    );\r\n}\r\n\r\nexport {TodoContext, TodoProvider};\r\n","import React from 'react'\r\n\r\n\r\nfunction useLocalStorage(itemName, initialValue){\r\n    const [loading,setLoading] = React.useState(true);\r\n    const [error,setError] = React.useState(false);\r\n    const [item,setItem] = React.useState(initialValue);\r\n  \r\n    const localStorageItem = localStorage.getItem(itemName);\r\n    let parsedItem;\r\n    React.useEffect(()=>{\r\n      setTimeout(()=>{\r\n  \r\n        try{\r\n            if(!localStorageItem){  \r\n              localStorage.setItem(itemName,JSON.stringify(initialValue))\r\n              parsedItem = initialValue\r\n          \r\n            }\r\n            else {\r\n              parsedItem = JSON.parse(localStorageItem);\r\n            }\r\n      \r\n            setItem(parsedItem);\r\n            setLoading(false);\r\n        } catch(error){\r\n          setError(true);\r\n        }\r\n  \r\n      \r\n  \r\n      },1000);\r\n    });\r\n  \r\n   \r\n  \r\n  \r\n    const saveItem = (newItem)=>{\r\n      try{\r\n        const stringifyItem = JSON.stringify(newItem);\r\n        localStorage.setItem(itemName, stringifyItem)\r\n        setItem(newItem);\r\n      }\r\n      catch(error){\r\n        setError(error);\r\n      }\r\n    }\r\n    return {\r\n      item,\r\n      saveItem,\r\n      loading,\r\n      error\r\n      \r\n    }\r\n  \r\n    ;\r\n  }\r\n  export {useLocalStorage}","import React from 'react';\r\nimport { TodoContext } from '../../TodoContext';\r\nimport './TodoCounter.css';\r\n\r\n\r\n\r\nfunction TodoCounter(){\r\n    const {totalTodos, completedTodos} = React.useContext(TodoContext);\r\n    return(\r\n        <React.Fragment>\r\n            <h2 style={{}} className=\"TodoCounter\"  >Has Completado {completedTodos} de {totalTodos} TODOs</h2>\r\n        </React.Fragment>\r\n    )\r\n}\r\nexport { TodoCounter};","import React from 'react';\r\nimport './TodoItem.css';\r\n\r\nfunction TodoItem(props){\r\n\r\n\r\n\r\n\r\n    return(\r\n        <li className=\"TodoItem\">\r\n        <span onClick={props.onComplete} className={`Icon Icon-check ${props.completed && 'Icon-check--active'}`}>\r\n          âˆš\r\n        </span>\r\n        <p className={`TodoItem-p ${props.completed && 'TodoItem-p--complete'}`}>\r\n          {props.text}\r\n        </p>\r\n        <span className=\"Icon Icon-delete\" onClick={props.onDelete}>\r\n          X\r\n        </span>\r\n      </li>\r\n    )\r\n}\r\n\r\nexport {TodoItem};","import React from \"react\";\r\nimport './CreateTodoButton.css';\r\n\r\nfunction CreateTodoButton({setOpenModal}){\r\n    const onClickButton = ()=>{\r\n        setOpenModal(prevState => !prevState)\r\n    }\r\n\r\n    return(\r\n        <button className=\"CreateTodoButton\"\r\n        onClick={onClickButton}\r\n        >+</button>\r\n    )\r\n}\r\n\r\nexport {CreateTodoButton};","import React from \"react\";\r\nimport { TodoContext } from \"../../TodoContext\";\r\nimport './TodoSearch.css';\r\n\r\n\r\nfunction TodoSearch( ){\r\n  const {searchValue, setSearchValue} = React.useContext(TodoContext);\r\n/* \r\n  const [searchValue,setSearchValue] = React.useState(''); */\r\n  const onSearchValueChange = (event)=>{\r\n\r\n    console.log(event.target.value);\r\n    setSearchValue(event.target.value);\r\n\r\n\r\n  }\r\n    return(\r\n      <input value={searchValue} onChange={onSearchValueChange} className=\"TodoSearch\" placeholder=\"Cebolla\" />)\r\n}\r\nexport {TodoSearch};","import React from 'react';\r\nimport './TodoList.css';\r\n\r\nfunction TodoList(props){\r\n    return(\r\n        <section>\r\n            <ul>\r\n                {props.children}\r\n            </ul>\r\n            \r\n        </section>\r\n    )\r\n}\r\n\r\nexport {TodoList};","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport './Modal.css'\r\nfunction Modal({ children }){\r\n    return (\r\n        ReactDOM.createPortal(\r\n            <div className=\"ModalBackground\">\r\n                {children}\r\n            </div>\r\n            \r\n            , document.getElementById('modal'))\r\n    )\r\n}\r\nexport {Modal};","import React from \"react\";\r\nimport { TodoContext } from \"../../TodoContext\";\r\nimport './TodoForm.css'\r\n\r\n function TodoForm(){\r\n\r\n    const {addTodo, setOpenModal } = React.useContext(TodoContext)\r\n    const [newTodoValue,setNewTodoValue] = React.useState('');\r\n\r\n    const onCancel= ()=>{\r\n        //TODO\r\n        setOpenModal(false)\r\n    };\r\n\r\n\r\n    const onSubmit = (event)=>{\r\n        event.preventDefault();\r\n        addTodo(newTodoValue);\r\n        setOpenModal(false)\r\n\r\n    }\r\n\r\n    const onChange = (event)=>{\r\n       const texto = event.target.value\r\n        setNewTodoValue(texto);\r\n    }\r\n\r\n\r\n     return(\r\n         <form onSubmit={onSubmit}>\r\n             <label htmlFor=\"\">Escribe tu nuevo TODO</label>\r\n             <textarea value={newTodoValue} onChange={onChange} placeholder=\"Cortar la Cebolla para el almuerzo\" ></textarea>\r\n             <div className=\"TodoForm-buttonContainer\">\r\n                 <button className=\"TodoForm-button TodoForm-button--cancel\" type=\"button\" onClick={onCancel} >Cancelar</button>\r\n                 <button className=\"TodoForm-button TodoForm-button--add\" type=\"submit\">AÃ±adir</button>\r\n             </div>\r\n\r\n\r\n         </form>\r\n     )\r\n }\r\n\r\n export {TodoForm};","import React from \"react\";\r\nimport { TodoContext } from \"../TodoContext\";\r\nimport {TodoCounter} from '../Componentes/TodoCounter';\r\nimport { TodoItem } from '../Componentes/TodoItem';\r\nimport { CreateTodoButton } from '../Componentes/CreateTodoButton';\r\nimport { TodoSearch } from '../Componentes/TodoSearch';\r\nimport { TodoList } from '../Componentes/TodoList';\r\nimport { Modal } from '../Modal'\r\nimport {TodoForm} from '../Componentes/TodoForm'\r\nfunction AppUI (){\r\n    const {error,loading,searchedTodos, completeTodo, deleteTodo, openModal, setOpenModal} = React.useContext(TodoContext)\r\n    return (\r\n      <React.Fragment>\r\n      \r\n       <TodoCounter /> \r\n        <TodoSearch  />\r\n       \r\n\r\n              <TodoList>\r\n          {error && <p>Desesperate, hubo un error</p>}\r\n          {loading && <p>Estamos Cargando, no desesperes</p>}\r\n          {(!loading && !searchedTodos.length) && <p>Crea tu primer Todo</p> }\r\n          \r\n          {searchedTodos.map( todo => (\r\n            <TodoItem key={todo.text} text={todo.text} completed={todo.completed} onComplete={()=>completeTodo(todo.text)} onDelete={()=> deleteTodo(todo.text)} />\r\n          ))}\r\n        </TodoList>\r\n\r\n\r\n\r\n        { !!openModal && (\r\n          <Modal> \r\n            <TodoForm/>\r\n          \r\n          </Modal>\r\n        ) }\r\n\r\n\r\n\r\n\r\n        \r\n        <CreateTodoButton setOpenModal={setOpenModal} /> \r\n\r\n      </React.Fragment>\r\n    )\r\n}\r\n\r\nexport  {AppUI};","import React from 'react';\nimport './App.css'\nimport { AppUI } from './AppUI';\nimport {TodoProvider} from '../TodoContext'\n\n\n/* let defaultTodos=[\n  {text: 'cortar cebolla', completed:false},\n  {text: 'Tomar curso de intro a React', completed:false},\n  {text: 'Llorar con la llorona', completed:true },\n  {text: 'Llalala', completed:true }\n] */\n\n\nfunction App() {\n  \n/*   console.log(\"Render antes de Use effect\")\n\n  React.useEffect(()=>{\n\n    console.log('use effect');\n  },[totalTodos]);\n */\n  /* \n  sin mandar array, se ejecuta cada vez que se renderiza\n  [] Solo se va ejecutar una sola vez  \n  [variable state] se renderiza cada vez que hay cambios de la variable \n  */\n/* \n\n\n  console.log('render luego del use effect') */\n\n  return ( \n    <TodoProvider>\n      <AppUI/>\n    </TodoProvider>\n    \n   \n  );\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}